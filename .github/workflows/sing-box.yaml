name: sing-box
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */8 * * *"
env:
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1
jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # windows
          - name: windows-amd64
            goos: windows
            goarch: amd64
            goamd64: v1
          - name: darwin-arm64
            goos: darwin
            goarch: arm64
          - name: linux-arm64
            goos: linux
            goarch: arm64
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      TAGS: with_clash_api,with_quic
    steps:
      - name: Clone code
        run: |
          rm -rf ../sing-box
          git clone -b dev https://github.com/SagerNet/sing-box.git ../sing-box
      - name: Get latest go version
        id: version
        run: |
          echo ::set-output name=go_version::$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g')
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.version.outputs.go_version }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        id: build
        run: cd ../sing-box && make
      - name: Move
        if: ${{  success() }}
        run: |
          mkdir -p ./bin
          mv ../sing-box/sing-box* ./bin
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: bin/
  Upload-Release:
    permissions: write-all
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: bin/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: bin

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: ${{  success() }}
        with:
          tag_name: sing-box
          files: bin/*

  Docker:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Clone code
        run: |
          rm -rf ../sing-box
          git clone -b dev https://github.com/SagerNet/sing-box.git ../sing-box
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup QEMU for Docker Buildx
        uses: docker/setup-qemu-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/skyxim/sing-box
      - name: Build and release Docker images
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          target: dist
          provenance: false
          tags: ghcr.io/skyxim/sing-box:latest
          context: ../sing-box
          push: true
